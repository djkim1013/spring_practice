// 프로젝트의 모든 모듈에 공통
plugins {
    id "idea"
    id "java"
    id "java-library"
    id "org.springframework.boot" version "2.7.9" apply false
    id "io.spring.dependency-management" version "1.0.11.RELEASE" apply false
}

// 모든 프로젝트 적용사항
allprojects {
    apply plugin: 'idea'
    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
        maven {
            url 'https://s01.oss.sonatype.org/content/repositories/snapshots/'
        }
    }

    group 'com.example'
    version '1.0-SNAPSHOT'

    // 자바버전 지정
    sourceCompatibility = 11
    targetCompatibility = 11

    // 컴파일 인코딩 옵션
    compileJava.options.encoding = "UTF-8"
    compileTestJava.options.encoding = "UTF-8"

    // 컴파일 옵션지정
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        options.fork = true
        options.forkOptions.executable = 'javac'
    }

    jar {
        enabled = false
    }
}

// 하위 프로젝트
subprojects {
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    // 의존성
    dependencies {
        // configuration processor
        implementation("org.springframework.boot:spring-boot-configuration-processor")

        // lombok
        compileOnly("org.projectlombok:lombok:${lombokVersion}")

        // configuration processor
        annotationProcessor("org.projectlombok:lombok:${lombokVersion}")
        annotationProcessor("org.springframework.boot:spring-boot-configuration-processor")

        // web
        implementation("org.springframework.boot:spring-boot-starter-web")

        // util
        api("org.apache.commons:commons-lang3")
    }
}

project(":was") {

    dependencies {

        // Jpa
        api("org.springframework.boot:spring-boot-starter-data-jpa")

        // redis
        implementation("org.springframework.boot:spring-boot-starter-data-redis")
        implementation("com.redis.om:redis-om-spring:${redisOmVersion}")
        annotationProcessor("com.redis.om:redis-om-spring:${redisOmVersion}")

        // mapstruct
        implementation("org.mapstruct:mapstruct:${mapstructVersion}")
        implementation("org.projectlombok:lombok-mapstruct-binding:0.2.0")

        annotationProcessor("org.mapstruct:mapstruct-processor:${mapstructVersion}")
    }

}
